sudo: required
dist: trusty

language: cpp

branches:
  except:
    - gh-pages

os:
  - linux

compiler:
  - clang
  - gcc

env:
  global:
    # Encrypted COVERITY_SCAN_TOKEN
    - secure: "M4RswpLBKVbIfY2k6W9mNFoSvJRpWFtMd5ynuMwgaBoaDbwn449KVfWKIlFruHGDfa9E/rB+y2twY5KktJm+RcLP8jvJCrWITy3E30rZQHAIgI1oAdy6i7NdMXHJYFQZs/eSYKZsN3/dfmzvnghA2txCG35tSxyLyb0vJp95VzY="

before_install:
  - sudo apt-get update -qq
  
install:
  - sudo apt-get install -qq cmake;

  - if [ "$CXX" == "clang++" ]; then sudo apt-get install -qq clang-format-3.5; fi
  
  # Armadillo C++
  - sudo apt-get install -qq libblas-dev
  - sudo apt-get install -qq liblapack-dev
  - sudo apt-get install -qq libopenblas-dev
  - wget -O armadillo.tar.gz http://downloads.sourceforge.net/project/arma/armadillo-5.100.2.tar.gz
  - mkdir armadillo
  - tar -xzf armadillo.tar.gz -C ./armadillo --strip-components=1
  - cd armadillo
  - cmake .
  - make --quiet -j 4
  - sudo make --quiet install
  - cd ..
  - rm -Rf armadillo armadillo.tar.gz

  # Catch
  - sudo apt-get install -qq catch
  
  # MPI (This will actually install 3.x on Ubuntu 14.04+ and 2.x on previous versions)
  - sudo apt-get install -qq libmpich2-dev

  # LCOV
  - if [ "$CXX" == "g++" ]; then sudo apt-get install -qq lcov; fi

  # LCOV to Coveralls conversion + upload
  - if [ "$CXX" == "g++" ]; then gem install coveralls-lcov; fi
  
addons:
  coverity_scan:
    project:
      name: "SebastianNiemann/Mantella"
    notification_email: niemann@sra.uni-hannover.de
    build_command_prepend: "cov-configure --compiler gcc-4.8 --template; cmake -DBUILD_TESTS=On"
    build_command: "make -j 4"
    branch_pattern: coverity_scan

script:
  # Builds tests an measure code coverage (GCC only)  
  - if [ "$CXX" == "g++" ]; then cmake -DBUILD_TESTS=On -DMEASURE_CODE_COVERAGE=On .; fi
  # Builds MPI-based tests (Clang  only)  
  - if [ "$CXX" == "clang++" ]; then cmake -DBUILD_TESTS=On -DSUPPORT_MPI=On .; fi
  - make -j 4
  - sudo make install
  
after_success:
  - if [ "$CXX" == "g++" ]; then cd ./CMakeFiles/mantella.dir/src/; fi
  - if [ "$CXX" == "g++" ]; then lcov --directory . --capture --output-file coverage.info; fi
  - if [ "$CXX" == "g++" ]; then lcov --remove coverage.info '/usr/*' --output-file coverage.info; fi
  - if [ "$CXX" == "g++" ]; then lcov --remove coverage.info '*.hpp' --output-file coverage.info; fi
  - if [ "$CXX" == "g++" ]; then lcov --list coverage.info; fi
  - if [ "$CXX" == "g++" ]; then coveralls-lcov coverage.info; fi
